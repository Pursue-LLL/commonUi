/* ==================
        初始化
 ==================== */
page {
  --grey: #8799a3;
  --black: #4b4b4b;
  --darkGray: #5f5d5d;
  --gray: #aaaaaa;
  --ghostWhite: #f5f5f5;
  --white: #ffffff;
  --gradualRed: linear-gradient(45deg, #f43f3b, #ec008c);

  font-size: 30rpx;
  color: var(--black);
  font-family: Helvetica Neue, Helvetica, sans-serif;
  line-height: 1.5;
}

view,
scroll-view,
swiper,
button,
input,
textarea,
label,
navigator,
image {
  box-sizing: border-box;
}

image {
  width: 100%;
  height: 100%;
}

input {
  width: 100%;
}


/* 隐藏scroll-view的滚动条 */
::-webkit-scrollbar {
  width: 0;
  height: 0;
  color: transparent;
}


/* ==================
        flex布局样式
 ==================== */

/* 水平 */
.row {
  display: flex;
  flex-direction: row;
}
/* 垂直 */
.col {
  display: flex;
  flex-direction: column;
  height: 100%;
}

/* 横向水平居中 */
.h-hc {
  display: flex;
  flex-direction: row;
  justify-content: center;
}

/* 横向垂直居中 */
.h-vc {
  display: flex;
  align-items: center;
  flex-direction: row;
}

/* 横向水平垂直居中 */
.h-hvc {
  display: flex;
  justify-content: center !important;
  align-items: center;
}

/* 纵向水平居中 */
.v-hc {
  display: flex;
  flex-direction: column;
  align-items: center;
}

/* 纵向垂直居中 */
.v-vc {
  display: flex;
  flex-direction: column;
  justify-content: center;
}

/* 纵向垂直水平居中 */
.v-vhc {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
}

/* 左对齐 */
.f_l {
  justify-content: flex-start;
}

/* 右对齐 */
.f_r {
  justify-content: flex-end;
}

/* 上对齐 */
.f_t{
  align-items: flex-start;
}

/* 下对齐 */
.f_b{
  align-items: flex-end;
}

/* 均分对齐 */
.f_sa {
  justify-content: space-around;
}

/* 边界对齐 */
.f_sb {
  justify-content: space-between;
}

/* 水平换行 */
.wrap {
  flex-wrap: wrap;
}

/* 适配剩余高度 */
.fitRestH {
  flex-grow: 1;
  height: 0;
}

.fitRestW {
  flex-grow: 1;
  width: 0;
}

.fitRest {
  flex-grow: 1;
}



/* 水平垂直居中 */
.absoluteAuto {
  position: absolute;
  top: 0;
  bottom: 0;
  right: 0;
  left: 0;
  margin: auto;
}

/* 固定 */
.fixed {
  position: fixed !important;
  top: 0;
  left: 0;
  z-index: 999;
  /* background: #ffffff; */
  width: 100% !important;
}

/* 列表 使用方法:

*/
.my_ul>.my_li {
  position: relative;
  display: flex;
  width: 90%;
  margin: 0 auto;
  min-height: 100rpx;
  background-color: var(--white);
  justify-content: space-between;
  align-items: center;
  border-bottom: 1rpx solid rgba(238, 238, 238, .6);
}

.my_ul>.my_li:last-child {
  border: none;
}



/* ---- 九宫格布局  公共样式 ----*/
.gridView {
  position: relative;
  /* width: 100%; */
  padding: 0 !important;
}


/* flex方式 flex不用再担心高度塌陷的问题，而且还可以轻松实现子元素横向竖向甚至按比例伸缩扩展的布局 */
.gridItem {
  position: relative;
  width: calc(96.6% / 3);
  /* calc里面的运算符两边要空格 */
  margin-right: 1.7%;
  margin-bottom: 1.7%;
  overflow: hidden;
}

.gridItem>.gridItem_inner {
  position: relative;
  width: 100%;
  padding-bottom: 100%;
}

.gridItem_inner>.inner_item {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
}

.gridView .gridItem:nth-of-type(3n) {
  margin-right: 0;
}

.gridView>.gridItem4:nth-of-type(n+4) {
  margin-bottom: 0;
}

.gridView>.gridItem7:nth-of-type(n+7) {
  margin-bottom: 0;
}



/* ----
  适用有实际高度的元素 并且明确列数 总列数高度
  网格布局 grid grid 比 flex 更为方便，代码量更少，可以处理更为复杂的结构 ios图片高100% 不能计算出来
----*/

.gridView.grid {
  padding-bottom: 100% !important;
  /* padding百分比是相对父元素宽度计算的 即高度等于父元素的宽度 正方形 */
}

.gridView_inner {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  /* 铺满父元素容器，这时候宽高就始终相等了 */
}

.grid {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  /* 相当于 1fr 1fr 1fr */
  grid-template-rows: repeat(3, 1fr);
  /* fr单位可以将容器分为几等份 */
  grid-gap: 1.7%;
  /* grid-column-gap 和 grid-row-gap的简写 */
  grid-auto-flow: row;

}


/* 九宫格图片的实现方法:
  flex方式:
  <view class="gridView">
    <view class="gridItem gridItem{{imgList.length>6?7:4}}" wx:for="{{imgList}}" wx:key="*this" wx:for-index="idx">
      <view class="gridItem_inner">
        <image class="inner_item"src="{{item}}" />
      </view>
    </view>
  </view>
  
  grid方式:
  <view class="gridView">
    <view class="gridView_inner grid" >
      <image wx:for="{{imgList}}" wx:key="*this" src="{{item}}/sq/200" />
    </view> 
  </view>

*/



/* 纵向自适应布局方法 */
/*
  view col
    view flex 0 0 100rpx
    view flex-grow: 1;
      view display: flex;
*/


/* ==================
        常用样式
 ==================== */


/* 阻止默认屏幕点击事件 */
.noEvent {
  pointer-events: none;
}

/* 透明度 */
.opa0 {
  opacity: 0
}

.opa1 {
  opacity: 1
}

/* placeholder文本 */
.placeholder {
  color: rgb(136, 135, 135);
  font-size: 26rpx;
}

/* 上下边框 */
.udBorder {
  border-bottom: rgba(247, 245, 245, 0.6) solid 1px;
  border-top: rgba(247, 245, 245, 0.6) solid 1px;
}

/* 下边框down */
.dBorder {
  border-bottom: rgba(247, 245, 245, 0.6) solid 1px !important;
}

/* 上边框up */
.uBorder {
  border-top: rgba(247, 245, 245, 0.6) solid 1px;
}



/* 超出部分出省略号 */
.text-overflow {
  white-space: nowrap;
  text-overflow: ellipsis;
  overflow: hidden;
  word-break: break-all;
}

/* 多行文本超出部分省略号 */
.ellipsis-line {
  display: -webkit-box;
  text-overflow: ellipsis;
  overflow: hidden;
  -webkit-line-clamp: 3;
  box-orient: vertical;
  -webkit-box-orient: vertical;
  -webkit-tap-highlight-color: rgba(0, 0, 0, 0);
  word-break: break-all;
}

/* 分割线 */
.divLine {
  width: 100%;
  height: 1px;
  transform: scaleY(0.6);
  background: #f3f3f3;
}

.divLine[class*="-s"] {
  height: 10rpx;
}

.divLine[class*="-m"] {
  height: 20rpx;
}

.divLine[class*="-l"] {
  height: 30rpx;
}

/* 圆 常用于头像等 */
.round {
  border-radius: 50%;
}

/* 盒子圆角 */
.radius {
  border-radius: 10rpx;
}

/* 白底灰字*/
.bg-white {
  background-color: var(--white);
  color: var(--darkGray);
}

/* 浅灰背景色 */
.bg-qh {
  background-color: #fdfbfb;
}

/* 标志竖杠 */
.shugang {
  width: 8rpx;
  height: 30rpx;
  margin-right: 30rpx;
  border-radius: 10rpx;
}

/* 操作条 */
.bar {
  display: flex;
  position: relative;
  align-items: center;
  min-height: 100rpx;
  flex: 0 0 100rpx;
  max-width: 100%;
}

/* 按钮 */
button,
.btn {
  font-size: 30rpx;
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  background: transparent;
  padding: 0;
  box-sizing: border-box;
  letter-spacing: 2rpx;
  overflow: visible;
  margin-left: initial;
  margin-right: initial;
}

/* 点击按钮动效 */
.btnHover {
  transform: translate(6rpx, 6rpx);
}



.btn[disabled] {
  opacity: 0.6;
  color: var(--white);
}


.btn-s {
  padding: 0 30rpx;
  font-size: 26rpx;
  height: 64rpx;
  color: #fff;
}

.btn-l {
  /* padding: 0 30rpx; */
  width: 640rpx;
  font-size: 32rpx;
  height: 86rpx;
  color: #fff;
  margin: 50rpx auto;
}

/* 重置官方按钮样式 包含去掉边框和其他 */
.resetBtn {
  background: transparent;
  border: none;
  padding: 0;
  line-height: 0;
  box-sizing: inherit;
  height: 100%;
  width: 100%
}

.resetLineH {
  line-height: initial;
}

.resetBtn::after {
  border: none;
}

/* 只去掉边框 */
.noborder::after {
  border: none;
}

.w100 {
  width: 100%;
}

.h100 {
  height: 100%;
}

/* 适应内容高度 */
.fitH {
  height: fit-content !important;
}

.fitW {
  width: fit-content !important;
}




/* ==================
      快速添加边距
 ==================== */



/* 外边距 */
.mt-auto {
  margin-top: auto !important;
}

.mb-auto {
  margin-bottom: auto !important;
}

.mr-auto {
  margin-right: auto !important;
}

.ml-auto {
  margin-left: auto !important;
}

.mt-s {
  margin-top: 10rpx;
}

.mt-m {
  margin-top: 20rpx;
}

.mt-l {
  margin-top: 30rpx;
}

.mt-xl {
  margin-top: 40rpx;
}

.mb-s {
  margin-bottom: 10rpx;
}

.mb-m {
  margin-bottom: 20rpx;
}

.mb-l {
  margin-bottom: 30rpx;
}

.mb-xl {
  margin-bottom: 40rpx !important;
}

.ml-s {
  margin-left: 10rpx;
}

.ml-m {
  margin-left: 20rpx;
}

.ml-l {
  margin-left: 30rpx;
}

.ml-xl {
  margin-left: 40rpx;
}

.mr-s {
  margin-right: 10rpx;
}

.mr-m {
  margin-right: 20rpx;
}

.mr-l {
  margin-right: 30rpx;
}

.mr-xl {
  margin-right: 40rpx;
}

.mlr-s {
  margin: 0 10rpx;
}

.mlr-l {
  margin: 0 30rpx;
}

.mlr-xl {
  margin: 0 40rpx;
}

.mlr-m {
  margin: 0 20rpx;
}

.mud-s {
  margin: 10rpx 0;
}

.mud-m {
  margin: 20rpx 0;
}

.mud-l {
  margin: 30rpx 0;
}

.mud-xl {
  margin: 40rpx 0;
}

.m-s {
  margin: 10rpx;
}

.m-m {
  margin: 20rpx;
}

.m-l {
  margin: 30rpx;
}

.m-xl {
  margin: 40rpx;
}








/* 内边距 */
.pt-auto {
  padding-top: auto !important;
}

.pb-auto {
  padding-bottom: auto !important;
}

.pr-auto {
  padding-right: auto !important;
}

.pl-auto {
  padding-left: auto !important;
}

.pt-s {
  padding-top: 10rpx;
}

.pt-m {
  padding-top: 20rpx;
}

.pt-l {
  padding-top: 30rpx;
}

.pt-xl {
  padding-top: 40rpx;
}

.pb-s {
  padding-bottom: 10rpx;
}

.pb-m {
  padding-bottom: 20rpx;
}

.pb-l {
  padding-bottom: 30rpx;
}

.pb-xl {
  padding-bottom: 40rpx;
}

.pl-s {
  padding-left: 10rpx;
}

.pl-m {
  padding-left: 20rpx;
}

.pl-l {
  padding-left: 30rpx;
}

.pl-xl {
  padding-left: 40rpx;
}

.pr-s {
  padding-right: 10rpx;
}

.pr-m {
  padding-right: 20rpx;
}

.pr-l {
  padding-right: 30rpx;
}

.pr-xl {
  padding-right: 40rpx;
}

.plr-s {
  padding: 0 10rpx;
}

.plr-l {
  padding: 0 30rpx;
}

.plr-xl {
  padding: 0 40rpx;
}

.plr-m {
  padding: 0 20rpx;
}

.pud-s {
  padding: 10rpx 0;
}

.pud-m {
  padding: 20rpx 0;
}

.pud-l {
  padding: 30rpx 0;
}

.pud-xl {
  padding: 40rpx 0;
}

.p-s {
  padding: 10rpx;
}

.p-m {
  padding: 20rpx;
}

.p-l {
  padding: 30rpx;
}

.p-xl {
  padding: 40rpx;
}


/* ==================
      阴影
 ==================== */



/* 盒子阴影 */

.shadow {
  box-shadow: 0 10rpx 40rpx 0 rgba(36, 36, 36, 0.14);
}

.shadow-s{
  box-shadow: 0 1rpx 6rpx rgba(36, 36, 36, 0.14);
}

.shadow-l{
  box-shadow: 0rpx 40rpx 100rpx 0rpx rgba(36, 36, 36, 0.14);
}



/* 翘边阴影 */
.shadow-wrap {
  position: relative;
  box-shadow: 0 0 30rpx rgba(0, 0, 0, 0.3);
}

.shadow-wrap-s {
  box-shadow: 0 0 16rpx rgba(0, 0, 0, 0.1);
}

.shadow-wrap-m {
  box-shadow: 0 0 16rpx rgba(0, 0, 0, 0.3);
}

.shadow-wrap:before,
.shadow-wrap:after {
  position: absolute;
  content: "";
  top: 20rpx;
  bottom: 30rpx;
  left: 20rpx;
  width: 50%;
  box-shadow: 0 30rpx 20rpx rgba(24, 24, 24, 0.2);
  transform: rotate(-3deg);
  z-index: -2;
}

.shadow-wrap:after {
  right: 20rpx;
  left: auto;
  transform: rotate(3deg);
}

/* 右下继承颜色阴影 */
.shadow-blur {
  position: relative;
  z-index: 0;
}

.shadow-blur-s {
  position: relative;
  z-index: 0;
}

.shadow-blur::before {
  content: "";
  display: block;
  background: inherit;
  filter: blur(6rpx);
  backdrop-filter: blur(6rpx);
  position: absolute;
  width: 100%;
  height: 100%;
  top: 10rpx;
  left: 10rpx;
  z-index: -1;
  opacity: 0.5;
  border-radius: inherit;
  -webkit-tap-highlight-color: rgba(255, 255, 255, 0)
}

.shadow-blur-s::before {
  content: "";
  display: block;
  background: inherit;
  filter: blur(10rpx);
  backdrop-filter: blur(6rpx);
  position: absolute;
  width: 100%;
  height: 100%;
  top: 10rpx;
  left: 12rpx;
  z-index: -1;
  opacity: 0.3;
  border-radius: inherit;
}

.btn-s.shadow-blur::before {
  top: 6rpx;
  left: 6rpx;
  filter: blur(6rpx);
  opacity: 0.5;
}




@import "/ui-liuyulu-components/ui-icon/icon.wxss";

/* ==================
         开关
 ==================== */
switch {
  position: relative;
  margin: 0 30rpx;
  margin-top: 10rpx;
}

switch::after,
switch::before {
  font-family: "iconfont";
  content: "\e60b";
  position: absolute;
  color: var(--white) !important;
  top: 0%;
  left: 0rpx;
  font-size: 26rpx;
  line-height: 26px;
  width: 50%;
  text-align: center;
  pointer-events: none;
  transform: scale(0, 0);
  transition: all 0.3s ease-in-out 0s;
  z-index: 9;
  bottom: 0;
  height: 26px;
  margin: auto;
}

switch::before {
  content: "\e658";
  right: 0;
  transform: scale(1, 1);
  left: auto;
}

.switch-face::after {
  content: "\e629";
}

.switch-face::before {
  content: "\e60e";
}

switch[checked]::after,
switch.checked::after {
  transform: scale(1, 1);
}

switch[checked]::before,
switch.checked::before {
  transform: scale(0, 0);
}

switch[checked]::before {
  transform: scale(0, 0);
}

switch .wx-switch-input {
  border: none;
  padding: 0 24px;
  width: 48px;
  height: 26px;
  margin: 0;
  border-radius: 100rpx;
}

switch .wx-switch-input:not([class*="bg-"]) {
  background: var(--grey) !important;
}

switch .wx-switch-input::after {
  margin: auto;
  width: 26px;
  height: 26px;
  border-radius: 100rpx;
  left: 0rpx;
  top: 0rpx;
  bottom: 0rpx;
  position: absolute;
  transform: scale(0.9, 0.9);
  transition: all 0.1s ease-in-out 0s;
}

switch .wx-switch-input.wx-switch-input-checked::after {
  margin: auto;
  left: 22px;
  box-shadow: none;
  transform: scale(0.9, 0.9);
}

switch.radius .wx-switch-input::after,
switch.radius .wx-switch-input,
switch.radius .wx-switch-input::before {
  border-radius: 10rpx;
}

switch .wx-switch-input::before {
  display: none;
}

switch.bg1[checked] .wx-switch-input.wx-switch-input-checked {
  background: var(--gradualnavBg1) !important;
  color: var(--white) !important;
}

switch.bg0[checked] .wx-switch-input.wx-switch-input-checked {
  background: var(--gradualnavBg0) !important;
  color: var(--white) !important;
}


